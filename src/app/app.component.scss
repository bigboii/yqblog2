@import '~@angular/material/_theming';

// Define a custom mixin that takes in the current theme
@mixin set-theme-sidenav($theme) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  // Create theme specfic styles
  .primaryColorBG {
    background-color: mat-color($primary);
  }
  .accentColorBG {
    background-color: mat-color($accent);
  }
  .warnColorBG {
    background-color: mat-color($warn);
  }

  /* Sidenav Drawer Color  */
  $the-dark-theme: mat-dark-theme($primary, $accent, $warn);

  .the-dark-theme {
      @include angular-material-theme($the-dark-theme);
      $background: map-get($the-dark-theme, background);
      background-color: mat-color($background, background);
  }

  /* Active List Item */
  .active-list-item {
    color: mat-color($primary) !important; /* Note: You could also use a custom theme */
  }
}

/* HEADER */
app-header {
  position:fixed;    //position sticky doesn't work within sidenav content
  width:100%;
  // height: 100%;
  // margin: 0;
  z-index: 8;
}

/* SIDENAV*/
app-sidenav {
  position: sticky!important; 
  top:0!important; 
  //height:calc(100vh - 64px);  //subtract toolbar height
  height:100vh;
  display: flex;
  flex-direction: column;
}

$some-other-color: mat-palette($mat-red, 700, 100, 800);

//SCSS for window scrollbar
mat-sidenav-container {
  // position: absolute;    //Use this to make router outlet contain scrollbar instead of window
  // top: 0;
  // bottom: 0;
  // left: 0;
  // right: 0;
  background-color: #EEEEEE;
  
}

mat-sidenav-container, mat-sidenav-content{
  display: block; 
  height: 100%;
}

//Grid layout
// mat-sidenav-content {
//   height:100%;
//   width:100%;
//   display:grid;
//   grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
//   grid-template-rows: 1fr auto 1fr;
//   // grid-template-rows: 100px max-content 1fr max-content;
//   grid-template-areas:
//   "header"
//   "main"
//   "footer";

//   grid-row-gap: 8px;
//   grid-column-gap:8px;
// }

// app-header {
//   grid-area:header;
//   // background: yellow;
// }

// router-outlet + * {
//   grid-area:main;
//   // background: #9154f3;
// }

// app-footer {
//   grid-area:footer;
//   // background: blue;
// }

// app-main { 
//   height: 100%; 
//   // overflow-y: auto; 
// }

/* Column Container */

.drawer-container {
  display: flex;
  flex-direction: column;
}

/* Set width of sidenav */
.drawer {
  width:256px;
}

.drawer mat-icon {
  padding: 4px 4px;
}

.row-sidenav-item {
  display: flex;
  flex-direction: row; 

  align-items: center; 
  text-align: center;
  
}

.row-sidenav-item > mat-icon {
  box-sizing: initial;          //don't use border-box for mat-icon
  padding-right:4px;
  margin-right:8px;
}

/**
  Router CSS
*/
router-outlet.router-flex + * {   //TODO: This solves my issue, but causes revealonscroll to not WORK
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  overflow:hidden;
}

::ng-deep .outlet-parallax~* {
  //position: absolute;        //uncomment to add transition animation
  width:100%;
  height:800px;
  top:0;
}
::ng-deep router-outlet~* {
  //position: absolute;        //uncomment to add transition animation
  //width:960px;
  width:100%;
  top:0;
}