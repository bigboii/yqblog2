@import '~@angular/material/_theming';

// @import 'themeVars';

// Create a config with the default typography levels.
$config: mat-typography-config();


// $my-button : mat-get($custom-typography, button);
// $button-font-family: mat-font-family($my-button);
// $button-font-size: mat-font-size($my-button);
// $button-font-weight: mat-font-weight($my-button);
// $button-line-height: mat-line-height($my-button);


// $my-font-size: mat-font-size($custom-typography, headline);
// $my-font-family: mat-font-family($custom-typography);

// Define a custom mixin that takes in the current theme
@mixin set-theme-vertical-tabs($theme) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  /*
    arrow bullet point
  */
  .tabCardContent li::before {  //TODO: make this apply only to vertical-tabs component, not globally
    content: "▹";
    position: absolute;
    left: 0px;
    color: mat-color($accent);
    font-size: 16px;
    // line-height: 60px;
  
  }

  .tabcontent ul {
    padding: 0px;
    margin: 0px;
    list-style: none;
  }
  
  .tabcontent ul li {
    position: relative;
    padding-left: 32px;
    margin-bottom: 8px;

    // font-family: 'Ubuntu Mono', monospace !important; 
    font-size: 14px;
  }
  
  .tabCardContent {
    ul {
      list-style-type: none;
    }
  }

  .tabcontent mat-card-content > p {
    // padding-left: 32px;
    // margin-bottom: 8px;
  }

  // .tabcontent > mat-card {
  //   padding:0px;
  // }

  // mat-card:hover {     //BUG:    THIS IS IMPACTING HOME.SCSS
  //   z-index: 4;
  //   @include mat-elevation-transition;
  // }

  /*  
  Remove elevation and background color for mat-card   //BUG:  this is impacting home scss
  This css is impacting home.scss????????????
  */
  // mat-card:not([class*=mat-elevation-z])
  .tabsContentContainer .mat-card:not([class*=mat-elevation-z]) {
    background: none;
    box-shadow: none;
    // z-index:0;
  }

  // .tabcontent {
  //   background: none;
  //   box-shadow: none;
  //   // z-index:0;
  // }

  .buttonRows {
    display:grid;
    border-right: 1px solid rgba(0,0,0,.12);
    height: fit-content;

    @media screen and (max-width: 600px) {   //ultra small
      grid-template-rows: 56px 56px 56px;
    }
    @media screen and (min-width: 600px) and (max-width: 720) {   //medium
      grid-template-rows: 64px 64px 64px;
    }
    @media screen and (min-width: 720px) {   //medium
      grid-template-rows: 64px 64px 64px;
    }

    button {
      color:inherit;
      transition: color 1s linear;
    }

    button:focus {
      color:mat-color($primary);
      transition: color 1s linear;
    }

    button:visited {
      color:inherit;
      transition: color 1s linear;
    }

  }

  .tabs {
    // float: left;
    // width: max-content;  //30%
    // height: 300px;
    .mat-button {             //to fix bug: when mat-button is clicked within grid layout, sections disappear.
      position:initial;
    }

    .mat-button:hover {             //to fix bug: when mat-button is clicked within grid layout, sections disappear.
      z-index: 2;
      @include mat-elevation-transition;
      @include mat-elevation(2);
    }

    
    display:grid;
    justify-content: right;
  
    @media screen and (max-width: 600px) {   //ultra small
      grid-column: 1 / span 1;
    }
    @media screen and (min-width: 600px) and (max-width: 720) {   //medium
      grid-column: 1 / span 1;
    }
    @media screen and (min-width: 720px) {   //medium
      grid-column: 1 / span 1;
    }
    @media screen and (min-width:1280px) and (max-width: 1439px){
      // 1280 – 1439
      grid-column: 1 / span 2;
    }
    @media screen and (min-width:1439px) {
      grid-column: 1 / span 2;
    }
  
    // .tabBorder {
    //   position:absolute;
    //   grid-row: 1 / span 1;
    // }

    .tabBorderContainer {
      // position:absolute;
      grid-row: 1 / span 1;
      position: relative;

      .tabBorder {
        // position:relative;
        position:absolute;
        right: 0;
        // right:64px;     //TODO: in desktop mode, its 136px... need to fetch this value dynamically somehow
      }
    }

  }


//   .tab div button {
//     // display: block;
//     background-color: inherit;
//     // color: $primary;
//     // padding: 8px;
//     // width: 100%;
//     // padding: 8px 24px;
//     border: none;
//     outline: none;
//     text-align: left;
//     cursor: pointer;
//     font-size: mat-font-size($config, button);
//     font-weight: mat-font-weight($config, button);
//     font-family: mat-font-family($config);
//     // max-height:61px;
//     border-radius:0px;     //override mat-button's rounded corners
//     // text-align: center;
//     vertical-align:middle;

// //     $button-font-family: map-font-family($my-button);
// // $button-font-size: map-font-size($my-button);
// // $button-font-weight: map-font-weight($my-button);
// // $button-line-height: map-line-height($my-button);
//   }

  .tabs-container {
    width:100%;
  }


  .tab div span {
    // display: block;
    background-color: inherit;

    height:100%;

//     $button-font-family: map-font-family($my-button);
// $button-font-size: map-font-size($my-button);
// $button-font-weight: map-font-weight($my-button);
// $button-line-height: map-line-height($my-button);
  }

  /* Change background color of buttons on hover */
  .tab button:hover {
    background-color: #ddd;
    color: black;
    border-right: none;
  }

  /* Create an active/current "tab button" class */
  .tab button.active {
    //background-color: #ccc;
    color: mat-color($accent);
    border-right: 2px solid mat-color($accent);
  }

  .tabsContentContainer {
    // grid-column: 3/span 3;
    grid-column: 3/span 5;
  }

  /* tab content */
  // .tabcontent {
    // float: left;
    // // padding: 16px;
    // width: 100%;
    // border-left: none;
    // height: 300px;
    // flex-grow: 1;



    // padding-top: 16px;
    // padding-left: 16px;
    //transition: all 0s cubic-bezier(0.645, 0.045, 0.355, 1) 0s;

    // grid-column: 3 / span 3;
  // }

  // .fixedCardHeight {
  //   height: 300px;
  // }
}

.vertical-tabs-wrapper {
  @media screen and (max-width: 600px) {   //ultra small
    display:none;
  }
  @media screen and (min-width: 600px) {   //medium
    // display:flex;
    // flex-direction: row;
  }

  // .mat-card {
  //   padding: 0 0;
  // }
}

.mat-card-avatar {
  width:48px;
  height:48px;
  margin-right:24px;
  // object-fit: scale-down;
}

.mat-card-avatar > img {
  width:48px;
  height:48px;
  // object-fit: scale-down;
}

.mat-card-header-text {
  margin: 0 !important;   //override material css for mat card header
}

.mat-card-title {

}

.mat-card-subtitle {
  
}

.card-container {
  //margin-bottom: 1%;
}


/*
  Overriding som material css properties
*/

.mat-card-header .mat-card-title {
  margin-bottom: 16px;
}

.mat-card-content>:first-child {
  margin-top:16px;
}




/*
 * Horizontal Tabs
 */

 .horizontal-tabs-wrapper {
  @media screen and (max-width: 600px) {   //ultra small
    // display:
  }
  @media screen and (min-width: 600px) {   //medium
    display:none;
  }
}

.mat-tab-body {
  padding-top:48px;
}