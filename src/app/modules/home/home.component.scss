@import '~@angular/material/_theming';
@import '~src/themeVars.scss';

$config: mat-typography-config();

// $eight-pt: 8px;
// $toolbarHeightLarge:64px;
// $toolbarHeightSmall:56px;

// Define a custom mixin that takes in the current theme
@mixin set-theme-home($theme) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $foreground: map-get($theme, foreground);

  // Create theme specfic styles
  .primaryColorBG {
    background-color: mat-color($primary);
  }
  .accentColorBG {
    background-color: mat-color($accent);
  }
  .warnColorBG {
    background-color: mat-color($warn);
  }

  // .mat-display-1 { 
  //   color:mat-color($accent);
  // }

  section > .mat-title
  {
    color: mat-color($accent);
  }

  section > .mat-headline
  {
    color: mat-color($accent);
  }

  section > .mat-display-2
  {
    // color: mat-color($accent);
  }

  /*
    arrow bullet point
    TODO: make this a directive
  */
  .about mat-list-item p::before {
    content: "â–¹";
    // position: absolute;
    // left: 0px;
    color: mat-color($accent);
    font-size: 16px;
    // line-height: 60px;
  }

  .arrowBulletPoint {
    font-size:16px;
    font-family: 'Ubuntu Mono', monospace;
  }

  /**
    Common Heading
  **/
  .heading {
    font-family: 'Roboto Mono', monospace;
      // position: relative;
      align-items: center;
      margin: 8px 0px 40px;   //TODO: causing issue with mobile screen sizes

      //Below needed for .heading::after
      // grid-column: 1/span 8;
      // grid-row: 1/span 1;
      display: flex;

      -webkit-box-align: center;
      // background-color: mat-color($foreground, text);
      color: mat-color($foreground, text);
      
      // white-space: nowrap;
      // font-size: 32px;      //TODO: dynamic font sizes? based on screen size

      // @media screen and (min-width: 400px) {   //ultra small
      //   padding: 0px 25px;
      //         font-size: 24px;         //TODO: causing issue with mobile screen sizes
      //   margin: 10px 0px 40px;   //TODO: causing issue with mobile screen sizes

      // }
      // @media screen and (min-width: 600px) {   //small
      //   padding: 0px 50px;
      // }
      // @media screen and (min-width: 1200px) {  //medium
      //   padding: 0px 100px;
      // }
      // @media screen and (min-width: 1600px) {  //large
      //   padding: 0px 150px;
      //         font-size: 32px;         //TODO: causing issue with mobile screen sizes
      // margin: 10px 0px 40px;   //TODO: causing issue with mobile screen sizes

      // }
  }

  .heading::before{
    counter-increment: heading-count;
    content: "0" counter(heading-count) ".";
    margin-right: 8px;
    // font-family: "SF Mono", "Fira Code", "Fira Mono", "Roboto Mono", "Lucida Console", Monaco, monospace;
    // font-weight: normal;
    color: mat-color($accent);
    font-size: 24px;
    position: relative;
    box-sizing: inherit;
  }

  .heading::after {
      // content: "";
      // // width: 300px;      //TODO: need width for small screen size
      // display: block;
      // height: 1px;
      // width: calc(#{$eight-pt} * 38);    //304px
      // background-color: mat-color($foreground, text);
      // position: relative;
      // margin-left: 24px;
      // box-sizing: inherit;
  }

  .dash::after {
    content: "";
    // width: 300px;      //TODO: need width for small screen size
    display: block;
    height: 1px;
    // width: calc(#{$eight-pt} * 38);    //304px
    width:100%;
    background-color: mat-color($foreground, text);
    position: relative;
    // margin-left: 24px;
    box-sizing: inherit;
  }

  .center {
    text-align: center;
    justify-content: center;
  }

  // h1, h2, h3, h4, h5 {
  //     font-weight: 600;
  //     color: rgb(230, 241, 255);
  //     margin: 0px 0px 10px;
  // }

}

@mixin set-theme-parallax($theme) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  // Create theme specfic styles
  .primaryColorBG {
    background-color: mat-color($primary);
  }
  .accentColorBG {
    background-color: mat-color($accent);
  }
  .warnColorBG {
    background-color: mat-color($warn);
  }

  .parallax-color {
    background-color: mat-color($primary, darker);
    color:mat-color($primary, 50);

    // @media screen and (max-width: 600px) {   //ultra small, TODO: refactor parallax
    //   padding: 0px calc(#{$eight-pt} * 6);
    // }
  }

  .section-parallax {
    // background-color: mat-color($primary, darker);
    // color:mat-color($primary, 50);
    padding: 0 !important;
    // margin: 0 !important;
    // max-width:none !important;
    width:100%;
  }

  .parallax-bg-light {
    background-color: mat-color($primary, darker);
    border-color: mat-color($accent, darker);
    // color:mat-color($primary, 50);
  }

  .parallax-bg-dark {
    background-color: mat-color($background);
    border-color: mat-color($accent, lighter);
    // color:mat-color($accent, lighter);
  }

  .parallax-caption h3 {
    //color:mat-color($accent);
  }

  .parallax-caption h1 {
    //color: mat-color($accent, darker);
  }

  .parallax-bg .mat-body-1 { 
    //color:mat-color($accent, lighter);
  }
}


/**
* Global CSS
*/
//Grid layout
mat-sidenav-content {

}

app-header {
  grid-area:header;
  // background: yellow;
}

router-outlet + * {
  grid-area:main;
  // background: #9154f3;
}

app-footer {
  grid-area:footer;
  // background: blue;
}

app-main { 
  height: 100%; 
  // overflow-y: auto; 
}

.home-container {
  counter-reset: heading-count;  //creates a counter
  grid-template-rows: auto auto;

  .parallax-container {
    // grid-area: pArea;
  
    // grid-column: 1 / span 12;
    grid-row: 1 / span 1;
  
  }
  
  .content-container {
    // grid-area: cArea;
    grid-row: 2 / span 1;

    section {
      @extend .grid6;
    }
  }
}

.padded {
  @media screen and (max-width: 600px) {   //ultra small
    padding: 0px calc(#{$eight-pt} * 6);
  }
  @media screen and (min-width: 600px) {   //medium
    padding: calc(#{$eight-pt} * 16) 0px;
  }
}

section {
  width:100%;
  // display:block;     //starts on a new line and strech out to the left and right as far as it can.

  height:100%;
  grid-template-rows: auto auto auto;

  // margin: 0px auto;
  // max-width: calc(#{$eight-pt} * 128);   //1024px
  // flex: 1 1 auto;    //prevent horizontal overflow; positive flex shrink; allow auto width to shrink
  @media screen and (max-width: 600px) {   //ultra small
    padding: calc(#{$eight-pt} * 8) 0px;
  }
  @media screen and (min-width: 600px) {  //large
    padding: calc(#{$eight-pt} * 16) 0px;
  }
}

section h1 {
 //use span 6

   @media screen and (max-width: 600px) {   //ultra small
    grid-column: 1 / span 1;
    grid-row: 1 / span 1;
  }
  @media screen and (min-width: 600px) and (max-width: 720) {   //medium
    grid-column: 1 / span 3;
    grid-row: 1 / span 1;
  }

  @media screen and (min-width: 720px) {   //medium
    grid-column: 1 / span 6;
    grid-row: 1 / span 1;
  }
}

section .content {

  @media screen and (max-width: 600px) {   //ultra small
    grid-column: 1 / span 1;
    grid-row: 2 / span 1;
  }
  @media screen and (min-width: 600px) and (max-width: 720) {   //medium
    grid-column: 1 / span 3;
    grid-row: 2 / span 1;
  }

  @media screen and (min-width: 720px) {   //medium
    grid-column: 1 / span 6;
    grid-row: 2 / span 1;
  }



}



/**
  Section Parallax
*/

.parallax-bg
{
  // position: relative;
  // display: flex;
  // flex-direction: column;
  // justify-content: center;
  // align-items: flex-start;
  // z-index:0;
  width: 100%; 
  // margin: 0px auto;

  @media screen and (min-width: 400px) {   //ultra small
    // padding: 100px 25px;
    padding: #{$toolbarHeightSmall} calc(#{$eight-pt} * 4) 0 calc(#{$eight-pt} * 4);
  }
  @media screen and (min-width: 600px) {   //small
    // padding: 150px 100px;
    padding: #{$toolbarHeightSmall} calc(#{$eight-pt} * 8) 0 calc(#{$eight-pt} * 8);
  }
  @media screen and (min-width: 1200px) {  //large
    // padding: 150px 150px;
    padding: #{$toolbarHeightLarge} calc(#{$eight-pt} * 16) 0 calc(#{$eight-pt} * 16);
  }
}

/* Put this on top of the blurred background layer */
.parallax-caption
{
  max-width: calc(#{$eight-pt} * 128);   //1024px
  display: flex;
  -webkit-box-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  flex-direction: column;
  align-items: flex-start;
  min-height: 100vh;
  margin: 0px auto;
  @media screen and (min-width: 400px) {
    padding: calc(100px - #{$toolbarHeightSmall}) 0px calc(#{$eight-pt} * 8) 0px;
    // padding: 100px 0px 100px 0px;
  }
  @media screen and (min-width:1200px) {
    padding: calc(150px - #{$toolbarHeightLarge}) 0px calc(#{$eight-pt} * 16) 0px;
    // padding: 150px 0px 150px 0px;
  }
}

.parallax-caption h3 {
  // font-family:'Ubuntu Mono', monospace;
  font-family: 'Roboto Mono', monospace;
  // margin: 0px 0px 8px 0px;
}

.parallax-caption .mat-display-1 {
  // font: 
  // font-family: 'Roboto Mono', monospace;
  // font: 400 20px/24px 'Roboto Mono', monospace;
  // font-size:80px;
  // line-height:1.1;
  max-width: 512px;
}

.mono {
  font: 400 20px/24px 'Roboto Mono', monospace;
}

.parallax-caption .mat-body-2 {
    /* width: 50%; */ 
    font-family:'Roboto', sans-serif;
    max-width: 512px;
    // margin: 24px 0px 0px 0px;
}

.parallax-caption .middle-caption2 {
  text-align: center;
  margin-bottom: 0;
  //font-size:mat-font-size($config, display-2);
  font-style:italic;
}

/*
  Section: Resume
*/
.sectionJobs {
  // max-width: calc(#{$eight-pt} * 88);  //704px
}

app-vertical-tabs {
  @media screen and (max-width: 600px) {   //ultra small
    display:none;
  }
  @media screen and (min-width: 600px) {  //large
    display:initial;
  }
}

// .about-container {
//   // flex: 1 1 auto;    //prevent horizontal overflow; positive flex shrink; allow auto width to shrink
//   display: flex;
//   -webkit-box-pack: justify;
//   justify-content: space-between;
//   -webkit-box-align: center;
//   align-items: flex-start;
//   box-sizing:border-box;
// }

.about-container-content {
  
  grid-column:1 / span 3;

  // max-width: 480px;
  // @media screen and (max-width: 600px) {   //ultra small
  //   width:100%;
  // }
  // @media screen and (min-width: 600px) {  //large
  //   width:60%;
  // }
}

.about-container-pic {
  grid-column: 5 / span 2;
  position: relative;
  // width: 40%;
  height:auto;
  // max-width: 300px;
  // max-width: calc(#{$toolbarHeightLarge} * 5);  //
  // margin-top: 22px;
  border-radius:4px;

  // @media screen and (max-width: 600px) {        //ultra small
  //   width:100%;
  //   margin: 0px auto;
  //   padding-top: 24px;
  // }
  // @media screen and (min-width: 600px) {        //large
  //   width:60%;
  //   margin-left: 64px;
  // }

  a {
    filter: grayscale(100%) contrast(1);
    color: rgb(100, 255, 218);
    transition: opacity 500ms ease 0s;

    &:hover {
      color: rgb(0, 0, 0);
      filter: none;
    }

    img.avator-pic::before {
      top: 0px;
      left: 0px;
      right: 0px;
      bottom: 0px;
      background-color: rgb(10, 25, 47);
      mix-blend-mode: screen;
      content: "";
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 4px;
      transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1) 0s;
    }
    img.avator-pic::after {
      top: 20px;
      left: 20px;
      z-index: -1;
      border-width: 8px;
      border-style: solid;
      border-color: rgb(100, 255, 218);
      border-image: initial;
      content: "";
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 4px;
      transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1) 0s;
    }
  } 
}
// .about-container-pic img {
//   width:100%;
// }


.avatar-pic
{
  // position: absolute;
  // top: 0px;
  // left: 0px;
  // width: calc(#{$toolbarHeightLarge} * 5); //;
  // height: calc(#{$toolbarHeightLarge} * 5); //;
  width: 100%;
  object-fit: cover;
  object-position: center center;
}


/*
  Section: Projects
*/
.cardList {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content:flex-start;

}

// .cardList >*:not(:last-child) {
//   margin-right:24px;
//   margin-bottom:24px;
// }

.cardListItem {
  // grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
  // grid-column-gap:24px;
  grid-auto-flow:rows;
  grid-row-gap: 24px;

  // @media screen and (max-width: 600px) {   //extra-small
  //   flex: 0 1 calc(100%);  //TODO: need to make this responsive
  // }
  // @media screen and (min-width: 600px) and (max-width: 960px) { //small
  //   flex: 0 1 calc(50%);  //TODO: need to make this responsive
  // }
  // @media screen and (min-width: 960px) and (max-width: 1200px) {   //medium
  //   flex: 0 1 calc(50%);  //TODO: need to make this responsive
  // }
  // @media screen and (min-width: 1200px) and (max-width:1920px) {   //large
  //   flex: 0 1 calc(33.3%);  //TODO: need to make this responsive
  // }
  // @media screen and (min-width: 1920px) {   //extra-large 
  //   flex: 0 1 calc(33.3%);  //TODO: need to make this responsive
  // }



}

.cardTile {
  grid-column: span 2;
}

.cardListItem > .mat-card {
  @include mat-elevation-transition;
  @include mat-elevation(4);

  &:hover {
    @include mat-elevation(16);
  }
}

.mat-card {
  padding: 32px 32px;
}

.vertical_center_helper {   //used to help center img vertically
  display:inline-block; 
  height:100%; 
  vertical-align:middle;
}

.tileButton {
  padding:0;
}

.github_img {
  height: 24px;
  vertical-align:middle;
  // transform: 'translateY(-18px)';
  // transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1) 0s;
}

.tileCardTitle {
  min-height:48px;    //for desktop mode, need another one for small screends
}

.tileCardContent {
  min-height:200px;
}

.tileCardContent ul {
  flex-grow: 1;
  display: flex;
  align-items: flex-end;
  flex-wrap: wrap;
  margin-top: 24px;
  list-style: none;
  padding: 0;
}

.tileCardContent li {
  font-family: "SF Mono", "Fira Code", "Fira Mono", "Roboto Mono", "Lucida Console", Monaco, monospace;
  // font-size: 14px;
  color: rgb(136, 146, 176);
  // line-height: 1.75;
  margin-right: 16px;
}

.tileCardContent li:last-of-type {
  margin-right: 0px;
}


/* General */

/* Section: Skills */
.section > mat-list {
  display: inline-block;
}

/* List Item Height */
.mat-list .mat-list-item {
  height: 32px; /* default is 72px */
}


p {
  // margin: 0px 0px 16px;
}