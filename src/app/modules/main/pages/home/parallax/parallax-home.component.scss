@import '~@angular/material/_theming';

// Define a custom mixin that takes in the current theme
@mixin set-theme-parallax($theme) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  // Create theme specfic styles
  .primaryColorBG {
    background-color: mat-color($primary);
  }
  .accentColorBG {
    background-color: mat-color($accent);
  }
  .warnColorBG {
    background-color: mat-color($warn);
  }

  .parallax-bg{
    background-color: mat-color($primary, darker);  //TODO: background color for dark theme(?)
    //border-color: mat-color($accent, darker);
    color:mat-color($primary, 50);
  }

  .parallax-bg-light {
    background-color: mat-color($primary, darker);
    border-color: mat-color($accent, darker);
    color:mat-color($primary, 50);
  }

  .parallax-bg-dark {
    background-color: mat-color($background);
    border-color: mat-color($accent, lighter);
    color:mat-color($accent, lighter);
  }

  .parallax-caption h3 {
    //color:mat-color($accent);
  }

  .parallax-caption h1 {
    //color: mat-color($accent, darker);
  }

  .parallax-bg .mat-body-1 { 
    //color:mat-color($accent, lighter);
  }
}

/* --------------------------------------------*/
/* ------------ Parallax ----------------------*/
/* --------------------------------------------*/

.parallax-bg
{
  --matToolbarLarge:64px;        //TODO: hardcode this? or dynamically retrieve this via typescript?
  --matToolbarSmall:56px;

  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  z-index:0;
  width: 100%; 
  // margin: 0px auto;

  @media screen and (min-width: 400px) {   //ultra small
    // padding: 100px 25px;
    padding: calc(100px - var(--matToolbarSmall)) 25px 100px 25px;
  }
  @media screen and (min-width: 600px) {   //small
    // padding: 150px 100px;
    padding: calc(150px - var(--matToolbarSmall)) 100px 150px 100px;
  }
  @media screen and (min-width: 1200px) {  //large
    // padding: 150px 150px;
    padding: calc(150px - var(--matToolbarLarge)) 150px 150px 150px;
  }
}

/* Put this on top of the blurred background layer */
.parallax-caption
{
  max-width: 1000px;
  display: flex;
  -webkit-box-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  flex-direction: column;
  align-items: flex-start;
  // min-height: 100vh;
  // margin: 0px 0px 0px 0px;
  @media screen and (max-width: 1200px) {
    padding: 150px 0px;
  }
  @media screen and (max-width:400px) {
    padding: 25px 0px;
  }
}

.parallax-caption h3 {
  font-family:'Ubuntu Mono', monospace;
  margin: 0px 0px 0px 0px;
}

.parallax-caption h1 {
  font-family:'Roboto', sans-serif;
  font-size:80px;
  line-height:1.1;
}

.parallax-caption p {
    /* width: 50%; */ 
    font-family:'Roboto', sans-serif;
    max-width: 500px;
    margin: 25px 0px 0px 0px;
}

.parallax-caption .middle-caption2 {
  text-align: center;
  margin-bottom: 0;
  //font-size:mat-font-size($config, display-2);
  font-style:italic;
}
