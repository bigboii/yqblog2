@import '~@angular/material/_theming';

// @import 'themeVars';

// Create a config with the default typography levels.
$config: mat-typography-config();


// $my-button : mat-get($custom-typography, button);
// $button-font-family: mat-font-family($my-button);
// $button-font-size: mat-font-size($my-button);
// $button-font-weight: mat-font-weight($my-button);
// $button-line-height: mat-line-height($my-button);


// $my-font-size: mat-font-size($custom-typography, headline);
// $my-font-family: mat-font-family($custom-typography);

// Define a custom mixin that takes in the current theme
@mixin set-theme-vertical-tabs($theme) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  /*
    arrow bullet point
  */
  mat-card-content p::before {
    content: "â–¹";
    position: absolute;
    left: 0px;
    color: mat-color($accent);
    font-size: 12px;
    // line-height: 60px;
    box-sizing:inherit;
  }

  mat-card-content > p {
    padding-left: 30px;
    margin-bottom: 10px;
  }

  .tabcontent > mat-card {
    padding:0px;
  }

  mat-card:hover {
    z-index: 4;
    @include mat-elevation-transition;
  }

  /*
    TAB CSS
  */

  /* Style the tab */
  .tab {
    float: left;
    width: max-content;  //30%
    height: 300px;
  }

  /* Style the buttons inside the tab */
  // $my-button : map-get($config, button);
  .tab div button {
    // display: block;
    background-color: inherit;
    // color: $primary;
    padding: 8px 8px;
    width: 100%;
    border: none;
    outline: none;
    text-align: left;
    cursor: pointer;
    font-size: mat-font-size($config, button);
    font-weight: mat-font-weight($config, button);
    font-family: mat-font-family($config);
    max-height:61px;
    border-radius:0px;     //override mat-button's rounded corners
    text-align: center;

  vertical-align:middle;

//     $button-font-family: map-font-family($my-button);
// $button-font-size: map-font-size($my-button);
// $button-font-weight: map-font-weight($my-button);
// $button-line-height: map-line-height($my-button);
  }

  .tab div span {
    // display: block;
    background-color: inherit;

    height:100%;

//     $button-font-family: map-font-family($my-button);
// $button-font-size: map-font-size($my-button);
// $button-font-weight: map-font-weight($my-button);
// $button-line-height: map-line-height($my-button);
  }

  /* Change background color of buttons on hover */
  .tab button:hover {
    background-color: #ddd;
    color: black;
    border-right: none;
  }

  /* Create an active/current "tab button" class */
  .tab button.active {
    //background-color: #ccc;
    color: mat-color($accent);
    border-right: 2px solid mat-color($accent);
  }

  /* Style the tab content */
  .tabcontent {
    float: left;
    padding: 0px 12px;
    width: 34em;
    border-left: none;
    height: 300px;
    flex-grow: 1;

    padding-top: 12px;
    padding-left: 30px;
    //transition: all 0s cubic-bezier(0.645, 0.045, 0.355, 1) 0s;
  }

}

mat-card-avatar {
  width:60px;
  height:60px;
  object-fit: scale-down;
}

/*
  Remove elevation and background color for mat-card
*/
.mat-card:not([class*=mat-elevation-z]) {
  background: none;
  box-shadow: none;
  z-index:0;
}

.card-container {
  //margin-bottom: 1%;
}